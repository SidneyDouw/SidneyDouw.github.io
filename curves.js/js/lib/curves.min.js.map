{"version":3,"sources":["../../bower_components/almond/almond.js","modules/Point.js","modules/BezierPoint.js","modules/Curve.js","main.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","Point","x","y","color","size","context","r","ctx","draw","fillStyle","beginPath","arc","Math","PI","closePath","fill","BezierPoint","cpDist","position","cp1","cp2","collapsed","collapse","move","v1x","v1y","v2x","v2y","setPointStyle","lineWidth","moveTo","lineTo","stroke","Curve","interval","canvas","width","pointColor","pointSize","lineColor","points","height","cw","ch","mouseX","mouseY","events","canvasEvents","createLUT","xGetY","frame","tolerance","iMin","iMax","key","xTarget","xCurrent","lookupX","abs","round","lookupY","p1","p2","pct","t","pow","on","event","func","bind","dist","dragReady","dragCP","draging","_this","addEventListener","evt","bbox","getBoundingClientRect","clientX","left","clientY","top","sqrt","style","cursor","keys","deltaW","deltaH","posX","floor","posY","temp","ondrag","onmousemove","preventDefault","addPoint","onnewpoint","offsetX","offsetY","ontogglecontrol","onremovepoint","sort","a","b","setLineStyle","clearRect","strokeStyle","pP","bezierCurveTo","window","keyCode"],"mappings":"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","file":"curves.min.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n","define('modules/Point',[],function(){\n\n\tfunction Point(x, y, color, size, context) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.r = size/2;\n\t\tthis.color = color;\n\t\tthis.ctx = context;\n\t}\n\tPoint.prototype.draw = function() {\n\t\tthis.ctx.fillStyle = this.color;\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.arc(this.x, this.y, this.r, 0, Math.PI*2, false);\n\t\tthis.ctx.closePath();\n\t\tthis.ctx.fill();\n\t};\n\n\treturn Point;\n\n});\n\n","define('modules/BezierPoint',['modules/Point'], function(Point){\n\n\tfunction BezierPoint(x, y, context, color, size, cpDist) {\n\n\t\tthis.cpDist = cpDist;\n\n\t\tthis.color = color;\n\t\tthis.size = size;\n\n\t\tthis.position = new Point(x, y, this.color, this.size, context);\n\t\tthis.cp1 = new Point(x-this.cpDist, y, this.color, this.size, context);\n\t\tthis.cp2 = new Point(x+this.cpDist, y, this.color, this.size, context);\n\n\t\tthis.ctx = context;\n\t\tthis.r = 2;\n\n\t\tthis.collapsed = false;\n\n\t}\n\tBezierPoint.prototype.collapse = function() {\n\t\t\n\t\tif (!this.collapsed) {\n\t\t\tthis.collapsed = true;\n\t\t\tthis.cp1.x = this.cp2.x = this.position.x;\n\t\t\tthis.cp1.y = this.cp2.y = this.position.y;\n\t\t} else {\n\t\t\tthis.collapsed = false;\n\t\t\tthis.cp1.x = this.position.x - this.cpDist;\n\t\t\tthis.cp2.x = this.position.x + this.cpDist;\n\t\t}\n\n\t};\n\tBezierPoint.prototype.move = function() {\n\t\tif (!this.collapsed) {\n\t\t\tthis.v1x = this.cp1.x - this.position.x;\n\t\t\tthis.v1y = this.cp1.y - this.position.y;\n\t\t\tthis.v2x = this.cp2.x - this.position.x;\n\t\t\tthis.v2y = this.cp2.y - this.position.y;\n\t\t} else {\n\t\t\tthis.v1x = this.v1y = this.v2x = this.v2y = 0;\n\t\t}\n\n\t};\n\tBezierPoint.prototype.setPointStyle = function(color, size) {\n\t\tthis.position.color = color;\n\t\tthis.cp1.color = color;\n\t\tthis.cp2.color = color;\n\t\tthis.position.r = size/2;\n\t\tthis.cp1.r = size/2;\n\t\tthis.cp2.r = size/2;\n\t};\n\tBezierPoint.prototype.draw = function() {\n\n\t\tthis.ctx.lineWidth = 0.2;\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.position.x, this.position.y);\n\t\tthis.ctx.lineTo(this.cp1.x, this.cp1.y);\n\t\tthis.ctx.stroke();\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.position.x, this.position.y);\n\t\tthis.ctx.lineTo(this.cp2.x, this.cp2.y);\n\t\tthis.ctx.stroke();\n\n\t\tthis.position.draw();\n\t\tthis.cp1.draw();\n\t\tthis.cp2.draw();\n\n\t};\n\n\treturn BezierPoint;\n\n});\n\n","define('modules/Curve',['modules/BezierPoint'], function(BezierPoint){\n\n\tfunction Curve(context, interval, cpDist) {\n\n\t\tthis.cpDist = cpDist ? cpDist : context.canvas.width * 0.2;\n\n\t\tthis.pointColor = '#f00';\n\t\tthis.pointSize = 4;\n\n\t\tthis.lineColor = '#fff';\n\t\tthis.lineWidth = 1;\n\n\t\tthis.points = [\n\t\t\tnew BezierPoint(0, context.canvas.height, context, this.pointColor, this.pointSize, this.cpDist),\n\t\t\tnew BezierPoint(context.canvas.width, 0, context, this.pointColor, this.pointSize, this.cpDist)\n\t\t];\n\n\t\tthis.ctx = context;\n\t\tthis.cw = context.canvas.width;\n\t\tthis.ch = context.canvas.height;\n\n\t\tthis.mouseX = 0;\n\t\tthis.mouseY = 0;\n\n\t\tthis.events = {};\n\n\t\tthis.interval = interval;\n\n\t\tthis.canvasEvents();\n\t\tthis.createLUT();\n\t\tthis.draw();\n\n\t}\n\tCurve.prototype.xGetY = function(frame) {\n\n\t\tvar tolerance = 0.0001;\n\t\t\n\t\tvar iMin = 0;\n\t\tvar iMax = 5000;\n\t\tvar key = (iMin+iMax)/2;\n\n\t\tvar xTarget = frame/this.interval;\n\t\tvar xCurrent = this.lookupX[key];\n\n\t\tvar i = 0;\n\n\t\twhile (Math.abs(xTarget-xCurrent) > tolerance){\n\t\t\ti++;\n\t\t\t\n\t\t\tif (xCurrent > xTarget) {\n\t\t\t\tiMax = key;\n\t\t\t} else if (xCurrent < xTarget) {\n\t\t\t\tiMin = key;\n\t\t\t}\n\t\t\tkey = Math.round((iMin+iMax)/2);\n\t\t\txCurrent = this.lookupX[key];\n\n\t\t\tif (i > 20) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.lookupY[key];\n\n\t};\n\tCurve.prototype.createLUT = function() {\n\t\t\n\t\tthis.lookupX = [];\n\t\tthis.lookupY = [];\n\n\t//\tthis.ctx.fillStyle = '#a50';\n\n\t\t//Percent Based Tesselation\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\tvar p1 = this.points[i-1];\n\t\t\tvar p2 = this.points[i];\n\t\t\tvar pct = (p2.position.x/this.cw) - (p1.position.x/this.cw);\n\t\t\tfor (var t = 0; t < 1; t+=1/(5000*pct)) {\n\t\t\t\tvar x = (Math.pow((1-t),3)*p1.position.x) + (3*Math.pow((1-t),2)*t*p1.cp2.x) + (3*(1-t)*Math.pow(t,2)*p2.cp1.x) + (Math.pow(t,3)*p2.position.x);\n\t\t\t\tvar y = (Math.pow((1-t),3)*p1.position.y) + (3*Math.pow((1-t),2)*t*p1.cp2.y) + (3*(1-t)*Math.pow(t,2)*p2.cp1.y) + (Math.pow(t,3)*p2.position.y);\n\t\t\t\tthis.lookupX.push(x/this.cw);\n\t\t\t\tthis.lookupY.push(-y/this.ch+1);\n\t//\t\t\tthis.ctx.fillRect(x, y, 3, 3);\n\t\t\t}\n\t\t}\n\n\t};\n\tCurve.prototype.on = function(event, func) {\n\t\tthis.events['on'+event] = func.bind(this);\n\t};\n\tCurve.prototype.canvasEvents = function() {\n\n\t\tvar x,\n\t\t\ty,\n\t\t\tdist,\n\t\t\tdragReady,\n\t\t\tdragCP,\n\t\t\tdraging;\n\n\t\tvar _this = this;\n\t\t\n\t\tthis.ctx.canvas.addEventListener('mousemove', function(evt){\n\n\t\t\tvar bbox = this.getBoundingClientRect();\n\n\t\t\tx = evt.clientX - bbox.left;\n\t\t\ty = evt.clientY - bbox.top;\n\n\t\t\t_this.mouseX = x;\n\t\t\t_this.mouseY = y;\n\n\t\t\tfor (var i = 0; i < _this.points.length; i++) {\n\t\t\t\tvar p = _this.points[i];\n\n\t\t\t\tif (!draging) {\n\n\t\t\t\t\tdist = Math.sqrt((x-p.position.x)*(x-p.position.x) + (y-p.position.y)*(y-p.position.y));\n\t\t\t\t\tif (dist <= _this.pointSize/2+2) {\n\t\t\t\t\t\tthis.style.cursor = 'pointer';\n\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdist = Math.sqrt((x-p.cp1.x)*(x-p.cp1.x) + (y-p.cp1.y)*(y-p.cp1.y));\n\t\t\t\t\t\tif (dist <= _this.pointSize/2+2) {\n\t\t\t\t\t\t\tthis.style.cursor = 'pointer';\n\t\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\t\tdragCP = 'cp1';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdist = Math.sqrt((x-p.cp2.x)*(x-p.cp2.x) + (y-p.cp2.y)*(y-p.cp2.y));\n\t\t\t\t\t\t\tif (dist <= _this.pointSize/2+2) {\n\t\t\t\t\t\t\t\tthis.style.cursor = 'pointer';\n\t\t\t\t\t\t\t\tdragReady = i;\n\t\t\t\t\t\t\t\tdragCP = 'cp2';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.style.cursor = 'initial';\n\t\t\t\t\t\t\t\tdragReady = false;\n\t\t\t\t\t\t\t\tdragCP = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (keys[18]) {\n\t\t\t\tvar deltaW = _this.cw / 20;\n\t\t\t\tvar deltaH = _this.ch/ 10;\n\n\t\t\t\tvar posX = Math.floor((x+deltaW/2) / deltaW);\n\t\t\t\tvar posY = Math.floor((y+deltaH/2) / deltaH);\n\n\t\t\t\tx = deltaW * posX;\n\t\t\t\ty = deltaH * posY;\n\t\t\t}\n\n\t\t\tif (draging) {\n\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t_this.points[dragReady].cp1.x = x;\n\t\t\t\t\t_this.points[dragReady].cp1.y = y;\n\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t}\n\t\t\t\t} else if (dragCP == 'cp2') {\n\n\t\t\t\t\t_this.points[dragReady].cp2.x = x;\n\t\t\t\t\t_this.points[dragReady].cp2.y = y;\n\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t_this.points[dragReady].position.x = x;\n\t\t\t\t\t_this.points[dragReady].position.y = y;\n\n\t\t\t\t\tif (dragReady === 0) {\n\t\t\t\t\t\t_this.points[dragReady].position.x = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (dragReady == _this.points.length-1) {\n\t\t\t\t\t\t_this.points[dragReady].position.x = _this.cw;\n\t\t\t\t\t}\n\n\t\t\t\t\t_this.points[dragReady].cp1.x = _this.points[dragReady].position.x + _this.points[dragReady].v1x;\n\t\t\t\t\t_this.points[dragReady].cp1.y = _this.points[dragReady].position.y + _this.points[dragReady].v1y;\n\t\t\t\t\t_this.points[dragReady].cp2.x = _this.points[dragReady].position.x + _this.points[dragReady].v2x;\n\t\t\t\t\t_this.points[dragReady].cp2.y = _this.points[dragReady].position.y + _this.points[dragReady].v2y;\n\n\t\t\t\t\tvar temp;\n\n\t\t\t\t\tif (_this.points[dragReady-1] && _this.points[dragReady+1]) {\n\t\t\t\t\t\tif (_this.points[dragReady].position.x > _this.points[dragReady+1].position.x) {\n\t\t\t\t\t\t\ttemp = _this.points[dragReady];\n\t\t\t\t\t\t\t_this.points[dragReady] = _this.points[dragReady+1];\n\t\t\t\t\t\t\t_this.points[dragReady+1] = temp;\n\t\t\t\t\t\t\tdragReady++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (_this.points[dragReady-1].position.x > _this.points[dragReady].position.x) {\n\t\t\t\t\t\t\ttemp = _this.points[dragReady];\n\t\t\t\t\t\t\t_this.points[dragReady] = _this.points[dragReady-1];\n\t\t\t\t\t\t\t_this.points[dragReady-1] = temp;\n\t\t\t\t\t\t\tdragReady--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t_this.events.ondrag ? _this.events.ondrag() : null;\n\t\t\t\t_this.draw();\n\t\t\t}\n\n\t\t\t_this.events.onmousemove ? _this.events.onmousemove() : null;\n\n\t\t});\n\t\tthis.ctx.canvas.addEventListener('mousedown', function(evt){\n\t\t\tevt.preventDefault();\n\n\t\t\tif (dragReady || dragReady === 0) {\n\t\t\t\tdraging = true;\n\t\t\t} else {\n\t\t\t\tif (dist > 5) {\n\t\t\t\t\tdragReady = _this.addPoint(x, y);\n\t\t\t\t\tdraging = true;\n\t\t\t\t\tthis.style.cursor = 'pointer';\n\t\t\t\t\t_this.draw();\n\t\t\t\t\t_this.events.onnewpoint ? _this.events.onnewpoint() : null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\t\tthis.ctx.canvas.addEventListener('mouseup', function(evt){\n\n\t\t\tdraging = false;\n\t\t\tif (dist > 5) {\n\t\t\t\tdragReady = dragCP = false;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < _this.points.length; i++) {\n\t\t\t\tvar p = _this.points[i];\n\t\t\t\tdist = Math.sqrt((x-p.position.x)*(x-p.position.x) + (y-p.position.y)*(y-p.position.y));\n\t\t\t\tif (dist <= _this.pointSize/2+2) {\n\t\t\t\t\tthis.style.cursor = 'pointer';\n\t\t\t\t\tdragReady = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.createLUT();\n\n\t\t});\n\t\tthis.ctx.canvas.addEventListener('mouseleave', function(evt){\n\n\t\t\tif (draging) {\n\t\t\t\tif (evt.offsetX < 0 || evt.offsetX > _this.cw) {\n\t\t\t\t\tif (evt.offsetX < 0) {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0 - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0 - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.x = 0;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = 0 + _this.points[dragReady].v1x;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = 0 + _this.points[dragReady].v2x;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = y - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = y - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.x = _this.cw;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = _this.cw + _this.points[dragReady].v1x;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = _this.cw + _this.points[dragReady].v2x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (evt.offsetY < 0 || evt.offsetY > _this.ch) {\n\t\t\t\t\tif (evt.offsetY < 0) {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0 - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0 - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.y = 0;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = 0 + _this.points[dragReady].v1y;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = 0 + _this.points[dragReady].v2y;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (dragCP == 'cp1') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.x = x - _this.points[dragReady].v1x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch - _this.points[dragReady].v1y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dragCP == 'cp2') {\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch;\n\n\t\t\t\t\t\t\t_this.points[dragReady].move();\n\n\t\t\t\t\t\t\tif (!keys[16]) {\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.x = x - _this.points[dragReady].v2x*2;\n\t\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch - _this.points[dragReady].v2y*2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_this.points[dragReady].position.y = _this.ch;\n\t\t\t\t\t\t\t_this.points[dragReady].cp1.y = _this.ch + _this.points[dragReady].v1y;\n\t\t\t\t\t\t\t_this.points[dragReady].cp2.y = _this.ch + _this.points[dragReady].v2y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_this.draw();\n\t\t\t_this.createLUT();\n\n\t\t\tdraging = dragReady = dragCP = false;\n\n\t\t});\n\t\tthis.ctx.canvas.addEventListener('click', function(evt){\n\t\t\tif (keys[16] && !dragCP) {\n\t\t\t\t_this.points[dragReady].collapse();\n\t\t\t\t_this.draw();\n\t\t\t\t_this.createLUT();\n\t\t\t\t_this.events.ontogglecontrol ? _this.events.ontogglecontrol() : null;\n\t\t\t}\n\t\t});\n\t\tthis.ctx.canvas.addEventListener('dblclick', function(evt){\n\t\t\t_this.points.splice(dragReady, 1);\n\t\t\tdraging = dragReady = dragCP = false;\n\t\t\tdist = 1000;\n\t\t\tthis.style.cursor = 'initial';\n\t\t\t_this.draw();\n\t\t\t_this.createLUT();\n\t\t\t_this.events.onremovepoint ? _this.events.onremovepoint() : null;\n\t\t});\n\n\t};\n\tCurve.prototype.addPoint = function(x, y) {\n\t\t\n\t\tthis.points.push(new BezierPoint(x, y, this.ctx, this.pointColor, this.pointSize, this.cpDist));\n\n\t\tthis.points.sort(function(a, b){\n\t\t\treturn a.position.x - b.position.x;\n\t\t});\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tif (x == p.position.x && y == p.position.y) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t};\n\tCurve.prototype.setPointStyle = function(color, size) {\n\t\t\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tthis.points[i].setPointStyle(color, size);\n\t\t\tthis.pointColor = color;\n\t\t\tthis.pointSize = size;\n\t\t}\n\t\tthis.draw();\n\n\t};\n\tCurve.prototype.setLineStyle = function(color, width) {\n\t\t\n\t\tthis.lineColor = color;\n\t\tthis.lineWidth = width;\n\t\tthis.draw();\n\n\t};\n\tCurve.prototype.draw = function() {\n\t\t\n\t\tthis.ctx.clearRect(0, 0, this.cw, this.ch);\n\t\t\n\t\tthis.ctx.strokeStyle = '#444';\n\t\tthis.ctx.lineWidth = 1;\n\n\t\tfor (i = 1; i < 10; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo((this.cw/10)*i-0.5, 0);\n\t\t\tthis.ctx.lineTo((this.cw/10)*i-0.5, this.ch);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t\tfor (i = 1; i < 5; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(0, (this.ch/5)*i-0.5);\n\t\t\tthis.ctx.lineTo(this.cw, (this.ch/5)*i-0.5);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t\tthis.ctx.lineWidth = 0.5;\n\t\tfor (i = 1; i < 20; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo((this.cw/20)*i-0.5, 0);\n\t\t\tthis.ctx.lineTo((this.cw/20)*i-0.5, this.ch);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\t\tfor (i = 1; i < 10; i++) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.moveTo(0, (this.ch/10)*i-0.5);\n\t\t\tthis.ctx.lineTo(this.cw, (this.ch/10)*i-0.5);\n\t\t\tthis.ctx.stroke();\n\t\t}\n\n\t\tthis.ctx.strokeStyle = this.lineColor;\n\t\tthis.ctx.lineWidth = this.lineWidth;\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.moveTo(this.points[0].position.x, this.points[0].position.y);\n\t\tfor (i = 1; i < this.points.length; i++) {\n\t\t\tvar p = this.points[i];\n\t\t\tvar pP = this.points[i-1];\n\t\t\tthis.ctx.bezierCurveTo(pP.cp2.x, pP.cp2.y, p.cp1.x, p.cp1.y, p.position.x, p.position.y);\n\t\t}\n\t\tthis.ctx.stroke();\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tthis.points[i].draw();\n\t\t}\n\n\t};\n\n\n\tvar keys = [];\n\twindow.addEventListener('keydown', function(e){\n\t\tkeys[e.keyCode] = true;\n\t});\n\twindow.addEventListener('keyup', function(e){\n\t\tdelete keys[e.keyCode];\n\t});\n\n\treturn Curve;\n\n});\n\n","define('main',['modules/Curve'], function(Curve){\n\t\n\treturn Curve;\n\n});\n\n"],"sourceRoot":"/source/"}